# -*- coding: utf-8 -*-
"""list_py_mlops.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1merC6Hr_A233wg3gjmOlfNJeN30NPxF_
"""

myList =['Bangladesh','Canada','Denmark','England']

myList

another_country = ['Germany','Japan']

myList + another_country

myList[0] ='America' # list  is immuteable it can change the value of the list where in string we can not do this

myList

myList.append('Kongo') # adding item of the list

myList

myList.pop() # remove the last item from the list

myList



#

#
##
# DICTIONARIES
# dictionaris object retrived by key name  . Unordered and can not be sorted

#
# List objects retrived by location
# ordered Sequence can be indexed or sliced
#

myDict = {'key1':'value1', 'key1':'value1','key1':'value1',}

myDict.fromkeys

di = {'k1':12,'k2':89.0,'k3':{'insideK1':100,'insideK2':45}}

print(f"here the value of k3 = ${di['k3']}")

di['k2']

di['k3']

di['k3']['insideK1'] # multiple dict values find

#
#
#
#
## Tuples
# it is very similar to lists . but the difference is it is IMMUTABILITY means we can not change the value after assign

t = (1,2,3,4,5)

t[0]

t[0]=100 # we can not change or fix the value

type(t)

t=(1,1,2,1,2,2,3,3,2,3,4,5,6,8)

t.count(2)



myString = 'sajjad rahman'

main_string = "Hello, this is an example string."
sub_string = "mp"

# Using str.index() to find the index of the substring
main_string.index(sub_string)

#print(f"The index of '{sub_string}' in the main string is: {index}")

