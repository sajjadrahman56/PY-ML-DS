# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15xEhz29gGmzIIBHbF7x53ckM1RBDpaC3
"""

import seaborn as sns

df = sns.load_dataset('iris')

df

df['species']

df['species'].value_counts()

df['species'].value_counts().plot(kind='bar')

df.info()

sns.pairplot(df)

sns.pairplot(df ,hue='species')

# MAP functions (dictionary)
df.species = df.species.map({'setosa':1,'versicolor':2,'virginica':3})

from sklearn.model_selection import train_test_split as tts

df

x = df.drop(['species'],axis='columns') # drop species columns from dataframe
y = df.species

x

y

type(y)

type(x)

x_train,x_test,y_train,y_test = tts(x,y,test_size=0.2)

print("x_train = {0} x_test = {1}".format(x_train.shape, x_test.shape))



from sklearn.svm import SVC
model = SVC()

# fit the model with training data and predict the test score with training data

model.fit(x_train,y_train) # fitting part

model.score(x_test,y_test)

model.predict([[5.9 ,	3.0 	,5.1 	,1.8]])



"""# Classification Report , Confusion Matrix"""

pred = model.predict(x_test)

from sklearn.metrics import confusion_matrix as cm
print(cm(y_test,pred))



from sklearn.metrics import classification_report as cr
print(cr(y_test,pred))



"""#  Testing the SVC classifier"""

from sklearn.svm import SVC
from sklearn.metrics import accuracy_score as a_s

kernels=['linear','rbf','poly']

for kernel in kernels:
    model = SVC(kernel=kernel)
    model.fit(x_train,y_train)
    pred = model.predict(x_test)
    print("accuracy using {}:",a_s(pred,y_test))

