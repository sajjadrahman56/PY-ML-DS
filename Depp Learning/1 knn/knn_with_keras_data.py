# -*- coding: utf-8 -*-
"""knn_with_keras-data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12HV5F6un2MlXK9JLeSh3TPPHpLn7XjNP

## library import
"""

from tensorflow import keras
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
import cv2

"""## data load from keras"""

(x_train,y_train),(x_test,y_test) = keras.datasets.cifar10.load_data()

"""## shape"""

x_train.shape
x_test.shape

#Normalization
x_train = x_train/255.0
x_test = x_test/255.0

"""## image conver to 2D"""

# sklearn expects i/p to be 2d array-model.fit(x_train,y_train)=> reshape to 2d array

nsamples,nx,ny,nrgb = x_train.shape

x_train2 = x_train.reshape((nsamples,nx*ny*nrgb))

# so , eventually model.predict() should also be a 2d input
nsamples,nx,ny,nrgb = x_test.shape

x_test2 = x_test.reshape((nsamples,nx*ny*nrgb))

x_test.shape

x_test2.shape

x_train.shape

x_train.shape

y_train.shape

"""# knn load"""

# KNN algorithm

from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier(n_neighbors=7)

knn.fit(x_train2,y_train)

y_pred_knn = knn.predict(x_test2)

y_pred_knn

score = accuracy_score(y_pred_knn,y_test)

print(classification_report(y_pred_knn,y_test))

"""# score"""

score

"""# Custome Input"""

img = cv2.imread("/content/b1.jpg")
img = cv2.resize(img,(32,32))

nx,ny,nrgb = img.shape
img2 = img.reshape(1,(nx*ny*nrgb))

classes =['airplane','automobile','bird','cat','deer','frog','horse','ship','truck']

result = knn.predict(img2)

result

# the result shows that it is airplane as 'array([0], dtype=uint8)' actually it is bird . the problem occurs due to score 33% only

img3 = cv2.imread("/content/d1.jpg")
img3 = cv2.resize(img3,(32,32))

nx,ny,nrgb = img3.shape
img4 = img3.reshape(1,(nx*ny*nrgb))

result2 = knn.predict(img4)
result2